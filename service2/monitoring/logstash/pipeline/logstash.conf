input {
  # Beats input for container logs
  beats {
    port => 5044
  }
  
  # TCP input for application logs
  tcp {
    port => 5000
    codec => json
  }
  
  # UDP input for structured logs
  udp {
    port => 5001
    codec => json
  }
}

filter {
  # Parse JSON logs
  if [message] =~ /^{.*}$/ {
    json {
      source => "message"
      target => "parsed"
    }
  }
  
  # Add timestamp if not present
  if ![@timestamp] {
    @timestamp = timestamp
  }
  
  # Add service information based on container
  if [container] {
    if [container][name] =~ /fastapi/ {
      mutate {
        add_field => { "service" => "fastapi" }
      }
    } else if [container][name] =~ /qdrant/ {
      mutate {
        add_field => { "service" => "qdrant" }
      }
    } else if [container][name] =~ /n8n/ {
      mutate {
        add_field => { "service" => "n8n" }
      }
    }
  }
  
  # Extract log level
  grok {
    match => { "message" => "%{LOGLEVEL:log_level}" }
  }
  
  # Handle RAG-specific log patterns
  if [service] == "fastapi" {
    grok {
      match => { "message" => "Query.*?(?<query_id>\d+).*?(?<execution_time>[\d\.]+)s" }
    }
    
    if [execution_time] {
      mutate {
        convert => { "execution_time" => "float" }
      }
    }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => ["agent", "ecs", "input", "tags", "host"]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "rag-logs-%{+YYYY.MM.dd}"
  }
  
  # Also output to stdout for debugging
  stdout {
    codec => rubydebug
  }
}